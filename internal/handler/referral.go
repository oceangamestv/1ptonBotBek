package handler

import (
	"fmt"
	"github.com/kbgod/coinbot/internal/service"
	"github.com/kbgod/illuminate/router"
)

var referralText = map[string]string{
	"en": "üîó Referral" +
		"\n\nInvite your friends and get rewards." +
		"\n\nYour referral link:" +
		"\n<code>%s</code>" +
		"\n\nFor each friend you invite, you will receive <code>$%s</code>." +
		"\nFor each friend you invite, you will receive 50%% of their taps (from 2 level)." +
		"\n\nReferrals count: <b>%d</b>" +
		"\nEarned: <b>%d</b> ü™ô" +
		"\nEarned USD: <b>$%s</b>",
	"ru": "üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞" +
		"\n\n–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ." +
		"\n\n–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:" +
		"\n<code>%s</code>" +
		"\n\n–ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ <code>$%s</code>." +
		"\n–ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 50%% –æ—Ç –∏—Ö –∫–ª–∏–∫–æ–≤ (—Å–æ 2 —É—Ä–æ–≤–Ω—è)." +
		"\n\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: <b>%d</b>" +
		"\n–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: <b>%d</b> ü™ô" +
		"\n–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ USD: <b>$%s</b>",
	"uk": "üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–∞" +
		"\n\n–ó–∞–ø—Ä–æ—à—É–π—Ç–µ –¥—Ä—É–∑—ñ–≤ —Ç–∞ –æ—Ç—Ä–∏–º—É–π—Ç–µ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥—É." +
		"\n\n–í–∞—à–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è:" +
		"\n<code>%s</code>" +
		"\n\n–ó–∞ –∫–æ–∂–Ω–æ–≥–æ –¥—Ä—É–≥–∞, —è–∫–æ–≥–æ –≤–∏ –∑–∞–ø—Ä–æ—Å–∏—Ç–µ, –≤–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ <code>$%s</code>." +
		"\n–ó–∞ –∫–æ–∂–Ω–æ–≥–æ –¥—Ä—É–≥–∞, —è–∫–æ–≥–æ –≤–∏ –∑–∞–ø—Ä–æ—Å–∏—Ç–µ, –≤–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ 50%% –≤—ñ–¥ —ó—Ö –∫–ª—ñ–∫—ñ–≤ (–∑ 2 —Ä—ñ–≤–Ω—è)." +
		"\n\n–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤: <b>%d</b>" +
		"\n–ó–∞—Ä–æ–±–ª–µ–Ω–æ: <b>%d</b> ü™ô" +
		"\n–ó–∞—Ä–æ–±–ª–µ–Ω–æ USD: <b>$%s</b>",
}

func (h *Handler) Referral(ctx *router.Context) error {
	u := getUserFromContext(ctx.Context)

	link := fmt.Sprintf("https://t.me/%s?start=r_%d", h.bot.Username, u.ID)
	//txt := "<b>üîó Referral</b>\n\n"
	//txt += "Invite your friends and get rewards.\n\n"
	//txt += "Your referral link:\n"
	//txt += fmt.Sprintf("<code>%s</code>\n\n", link)
	//txt += fmt.Sprintf("For each friend you invite, you will receive <code>$%s</code>.\n", service.ReferralRegisterReward.StringFixedBank(3))
	//txt += "For each friend you invite, you will receive 50% of their taps (from 2 level).\n\n"
	//
	refCount, err := h.svc.GetReferralsCount(u)
	if err != nil {
		return err
	}
	//txt += fmt.Sprintf("Referrals count: <b>%d</b>\n", refCount)
	//txt += fmt.Sprintf("Earned: <b>%d</b> ü™ô\n", u.ReferralProfit)
	//txt += fmt.Sprintf("Earned USD: <b>$%s</b>", u.ReferralProfitUSD.StringFixedBank(3))

	return ctx.ReplyVoid(
		langf(
			referralText, u.LanguageCode,
			link,
			service.ReferralRegisterReward.StringFixedBank(3),
			refCount,
			u.ReferralProfit,
			u.ReferralProfitUSD.StringFixedBank(3)))
}
